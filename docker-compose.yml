version: '3.8'
volumes:
  mssql_data:

services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart:  unless-stopped
    environment:
      SA_PASSWORD: "example123"
      ACCEPT_EULA: "Y"
    ports:
      - "21433:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P example123 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
      
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./init-mssql:/docker-entrypoint-initdb.d
    depends_on:
      mssql:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P example123 -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '

  redis:
    image: redis:latest
    restart:  unless-stopped
    ports:
      - "26379:6379"
    volumes:
      - ./redis_data:/data

  servicea:
#    image: mcr.microsoft.com/dotnet/sdk:latest
    restart:  unless-stopped

    build:
      context: ./app/
      dockerfile: ./ServiceA/Dockerfile
    depends_on:
      - mssql
      - redis
    environment:
      - CONNECTION_STRING=Server=mssql,1433;Database=mesages;User Id=sa;Password=example123;trusted_connection=false;Encrypt=False;
      - REDIS_CONNECTION_STRING=redis:6379
    ports:
      - "3000:8080"

  serviceb:
    restart: unless-stopped
#    image: mcr.microsoft.com/dotnet/sdk:latest

    build:
      context: ./app/
      dockerfile: ./ServiceB/Dockerfile
    depends_on:
      - mssql
      - redis
    environment:
      - CONNECTION_STRING=Server=mssql,1433;Database=mesages;User Id=sa;Password=example123;trusted_connection=false;Encrypt=False;
      - REDIS_CONNECTION_STRING=redis:6379
    # ports:
    #   - "20082:8080"

  servicec:

#    image: mcr.microsoft.com/dotnet/sdk:latest
    build:
      context: ./app/
      dockerfile: ./ServiceC/Dockerfile
    restart:  unless-stopped
    depends_on:
      - redis
    environment:
      - CONNECTION_STRING=Server=mssql,1433;Database=mesages;User Id=sa;Password=example123;trusted_connection=false;Encrypt=False;"
      - REDIS_CONNECTION_STRING=redis:6379
    ports:
      - "3001:8080"

  dev:
    image: mcr.microsoft.com/dotnet/sdk:latest
    restart:  unless-stopped
    volumes:
      - ./app:/app
      - ./app-root:/root
    environment:
      - CONNECTION_STRING=Server=mssql,1433;Database=mesages;User Id=sa;Password=example123;trusted_connection=false;Encrypt=False;
      - REDIS_CONNECTION_STRING=redis:6379
    working_dir: /app
    command: tail -f /dev/null # Keeps the container running for development purposes
    # ports:
    #   - "20080:80"
